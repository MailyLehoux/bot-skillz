'use strict';

exports.__esModule = true;
exports.toHelpOptions = toHelpOptions;
exports.help = help;

var _options = require('../utils/options');

var options = _interopRequireWildcard(_options);

var _errors = require('../utils/errors');

var _messages = require('../utils/messages');

var messages = _interopRequireWildcard(_messages);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function toHelpOptions(args, flags) {
  return {
    command: args.length > 0 ? args[0] : undefined
  };
}
async function help(opts) {
  if (opts.command) {
    throw new _errors.BoltError('Subcommand help information is not available yet.');
  } else {
    console.log(messages.helpContent());
  }
}